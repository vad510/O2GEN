@model O2GEN.Models.ControlTrendsFilter
@{
    ViewData["Title"] = "График по данным для контроля";
}
<section class="">

    <script src="~/js/canvasjs.min.js"></script>
    <div class="row-container-left bg-blue"  id="pageToolbar" style="position:sticky">
        <form action="ControlTrends" method="post">
            <div class="d-flex flex-wrap m-2">
                <span class="li-text-white mr-0">От:</span>
                <div class="mb-2">
                    <input id="From" type="datetime-local" value="@Model.From" name="From" class="datetime-css">
                </div>
                <span class="li-text-white mr-0">До:</span>
                <div class="mb-2">
                    <input id="To" type="datetime-local" value="@Model.To" name="To" class="datetime-css">
                </div>
                <div class="mb-2 mr-2">
                    <select asp-for="DepartmentId" class="form-control" onchange="GetRoutes(this);" required>
                        <option value="" disabled selected>Выбрать подразделение</option>
                        @foreach (Department item in O2GEN.Helpers.DBHelper.GetChildDepartments((long)((Credentials)Context.Items["User"]).DeptId))
                        {
                            <option value="@item.Id">@item.DisplayName</option>
                        }
                    </select>
                </div>
                <div class="mb-2 mr-2" style="width:200px;">
                    <select asp-for="AssetParameterSetId" class="form-control" onchange="GetAssets(this);" required>
                        @if (Model.DepartmentId != null)
                        {
                            <option value="" disabled selected>Выбрать маршрут</option>
                            foreach (AssetParameterSet item in O2GEN.Helpers.DBHelper.GetAssetParameterSets(DeptID: (int?)Model.DepartmentId))
                            {
                                <option value="@item.Id">@item.DisplayName</option>
                            }
                        }
                        else
                        {
                            <option value="NULL" disabled selected>Выберите подразделение</option>
                        }

                    </select>
                </div>
                <div class="mb-2 mr-2" style="width:200px;">
                    <select asp-for="AssetId" class="form-control" onchange="GetAssetChilds(this);" required>
                        @if (Model.AssetParameterSetId != null)
                        {
                            <option value="" disabled selected>Выбрать тех. позицию</option>
                            foreach (Asset item in O2GEN.Helpers.DBHelper.GetAssetsFromAPS((long)Model.AssetParameterSetId))
                            {
                                <option value="@item.Id">@item.DisplayName</option>
                            }
                        }
                        else
                        {
                            <option value="NULL" disabled selected>Выберите маршрут</option>
                        }
                    </select>
                </div>
                <div class="mb-2 mr-2" style="width:200px;">
                    <select asp-for="AssetChildId" class="form-control" onchange="GetControls(this);" required>
                        @if (Model.AssetId != null)
                        {
                            <option value="" disabled selected>Выбрать узел</option>
                            foreach (Hierarchy item in O2GEN.Helpers.DBHelper.GetAssetChildsFromAsset((long)Model.AssetId))
                            {
                                <option value="@item.Id">@item.DisplayName</option>
                            }
                        }
                        else
                        {
                            <option value="NULL" disabled selected>Выберите тех. позицию</option>
                        }
                    </select>
                </div>
                <div class="mb-2 mr-2" style="width:200px;">
                    <select asp-for="AssetParameterId" class="form-control" required>
                        @if (Model.AssetChildId != null)
                        {
                            <option value="" disabled selected>Выбрать контроль</option>
                            foreach (Hierarchy item in O2GEN.Helpers.DBHelper.GetControlsFromAssetChilds((long)Model.AssetChildId))
                            {
                                <option value="@item.Id">@item.DisplayName</option>
                            }
                        }
                        else
                        {
                            <option value="NULL" disabled selected>Выберите тех. узел</option>
                        }
                    </select>
                </div>
                <div class="mb-2 mr-2">
                    <button class="btn btn-light" type="submit">
                        <i class="fa fa-search"></i> Поиск
                    </button>
                </div>
            </div>
            
        </form>
    </div>

    <div class="margin-between-above">
        <div id="chartContainer" style="height: 100%; width: 100%;">
            @if(!string.IsNullOrEmpty(ViewBag.Message))
            {
            <div class="d-flex align-items-center justify-content-center h-100">
                <div class="d-flex flex-column">
                    <p class="h3 align-self-center p-2">
                        @ViewBag.Message
                    </p>
                </div>
            </div>
            }
        </div>
    </div>

    <script type="text/javascript">

        @*$(document).ready(function () {
            InitializeDatePicker();
            //$.noConflict();
            //$('#SetToday').click('click', SetTodayForTDTs);
        });
        function InitializeDatePicker() {

            @if (string.IsNullOrEmpty(Model.From))
            {
                <text>
                    var d = new Date(moment().subtract(2, 'days'));
                    var now = new Date(moment());
                </text>
            }
            else
            {
                <text>
                    var d = new Date(@Model.From);
                    var now = new Date(@Model.To);
                </text>
            }
            $('#datetimepickerFROM').datetimepicker({
                locale: 'ru',
                icons: {
                    time: "fa fa-clock",
                    date: "fa fa-calendar-alt",
                    up: "fa fa-arrow-up",
                    down: "fa fa-arrow-down"
                }
            });

            $('#datetimepickerFROM').on("change.datetimepicker", ({ date }) => { $('#From').val(date._d.getTime()); });
            $('#datetimepickerFROM').datetimepicker('date', new Date(d.getFullYear(), d.getMonth(), d.getDate()));

            $('#datetimepickerTO').datetimepicker({
                locale: 'ru',
                icons: {
                    time: "fa fa-clock",
                    date: "fa fa-calendar-alt",
                    up: "fa fa-arrow-up",
                    down: "fa fa-arrow-down"
                }
                });
            $("#datetimepickerTO").on("change.datetimepicker", ({ date }) => { $('#To').val(date._d.getTime()); });
            $('#datetimepickerTO').datetimepicker('date', now);
        }*@
        @if(ViewBag.Data!= null && ViewBag.Data.Count > 0)
        {
            <text>
                window.onload = function () {
                    var chart = new CanvasJS.Chart("chartContainer", {
	                    theme: "light2",
	                    animationEnabled: true,
	                    title: {
                            text: "@Html.Raw(ViewBag.Control.DisplayName)"
                        },
                        axisX: {
                            valueFormatString: "DD.MM.YYYY HH:mm",
                        },
                        axisY: {
                            maximum: @ViewBag.Maximum.ToString().Replace(",", "."),
                            minimum: @ViewBag.Minimum.ToString().Replace(",", "."),
                            includeZero: true,
                            gridThickness: 0,
                            stripLines: [
                                @if(!string.IsNullOrEmpty(ViewBag.Control.ValueBottom1) && !string.IsNullOrEmpty(ViewBag.Control.ValueTop1))
                                {
                                    <text>
                                    {
                                    startValue: @ViewBag.Control.ValueBottom1.Replace(",", "."),
                                    endValue: @ViewBag.Control.ValueTop1.Replace(",", "."),
                                    color: "#9fffa1",
                                    label: "Норма",
                                    labelFontColor: "#c4c4c4"
                                },
                                    </text>
                                }
                                @if(!string.IsNullOrEmpty(ViewBag.Control.ValueBottom2) && !string.IsNullOrEmpty(ViewBag.Control.ValueTop2))
                                {
                                    <text>
                                    {
                                    startValue: @ViewBag.Control.ValueBottom2.Replace(",", "."),
                                    endValue: @ViewBag.Control.ValueTop2.Replace(",", "."),
                                        color: "#fffb9e",
                                        label: "Отклонение",
                                        labelFontColor: "#c4c4c4",
                                },
                                    </text>
                                }
                                @if(!string.IsNullOrEmpty(ViewBag.Control.ValueBottom3) && !string.IsNullOrEmpty(ViewBag.Control.ValueTop3))
                                {
                                    <text>
                                    {
                                    startValue: @ViewBag.Control.ValueBottom3.Replace(",", "."),
                                    endValue: @ViewBag.Control.ValueTop3.Replace(",", "."),
                                        color: "#ff9e9e",
                                        label: "Сильное отклонение",
                                        labelFontColor: "#c4c4c4"},
                                    </text>
                                }
                            ]
	                    },
	                    toolTip: {
		                    shared: true
	                    },
                        data: [{
                            type: "spline",
                            color: "#333",
                            xValueFormatString: "DD.MM.YYYY HH:mm",
                            name: "@Html.Raw(ViewBag.Control.DisplayName)",
                            dataPoints: [
                                @for (int i = 0; i < ViewBag.Data.Count; i++)
                                {
                                    if (i > 0)
                                    {
                                        <text>,</text>
                                    }
                                    <text>{ x: new Date(@ViewBag.Data[i].x.ToString().Replace(",",".")), y: @ViewBag.Data[i].y.ToString().Replace(",",".") }</text>
                                }
                            ]
	                    }]
                    });
                    chart.render();
        }
            </text>
        }




        function GetRoutes(SelectedObj) {
            if (SelectedObj != 'undefined') {
                $.ajax({
                    method: "GET",
                    url: "GetAssetParameterSetByDepartmentJson",
                    dataType: "json",
                    data: {
                        "ObjId": SelectedObj.value
                    },
                    success: function (data) {
                        var s = '<option value="" selected disabled>Выбрать</option>';
                        for (var i = 0; i < data.length; i++) {
                            s += '<option value="' + data[i].id + '">' + data[i].displayName + '</option>';
                        }
                        $("#AssetParameterSetId").html(s);
                        $("#AssetId").html('<option value="NULL" disabled selected>Выберите подразделение</option>');
                        $("#AssetChildId").html('<option value="NULL" disabled selected>Выберите тех. позицию</option>');
                        $("#AssetParameterId").html('<option value="NULL" disabled selected>Выберите тех. узел</option>');
                    }
                })
            }
        }
        function GetAssets(SelectedObj) {
            if (SelectedObj != 'undefined') {
                $.ajax({
                    method: "GET",
                    url: "GetAssets",
                    dataType: "json",
                    data: {
                        "ObjId": SelectedObj.value
                    },
                    success: function (data) {
                        var s = '<option value="" selected disabled>Выбрать</option>';
                        for (var i = 0; i < data.length; i++) {
                            s += '<option value="' + data[i].id + '">' + data[i].displayName + '</option>';
                        }
                        $("#AssetId").html(s);
                        $("#AssetChildId").html('<option value="NULL" disabled selected>Выберите тех. позицию</option>');
                        $("#AssetParameterId").html('<option value="NULL" disabled selected>Выберите тех. узел</option>');
                    }
                })
            }
        }
        function GetAssetChilds(SelectedObj) {
            if (SelectedObj != 'undefined') {
                $.ajax({
                    method: "GET",
                    url: "GetAssetChilds",
                    dataType: "json",
                    data: {
                        "ObjId": SelectedObj.value
                    },
                    success: function (data) {
                        var s = '<option value="" selected disabled>Выбрать</option>';
                        for (var i = 0; i < data.length; i++) {
                            s += '<option value="' + data[i].id + '">' + data[i].displayName + '</option>';
                        }
                        $("#AssetChildId").html(s);
                        $("#AssetParameterId").html('<option value="NULL" disabled selected>Выберите тех. узел</option>');
                    }
                })
            }
        }
        function GetControls(SelectedObj) {
            if (SelectedObj != 'undefined') {
                $.ajax({
                    method: "GET",
                    url: "GetControlsByAssetChilds",
                    dataType: "json",
                    data: {
                        "ObjId": SelectedObj.value
                    },
                    success: function (data) {
                        var s = '<option value="" selected disabled>Выбрать</option>';
                        for (var i = 0; i < data.length; i++) {
                            s += '<option value="' + data[i].id + '">' + data[i].displayName + '</option>';
                        }
                        $("#AssetParameterId").html(s);
                    }
                })
            }
        }
    </script>
</section>